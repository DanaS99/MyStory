{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ccss\\\\Desktop\\\\widget-template-dev\\\\widgets-template-dev\\\\client\\\\src\\\\Components\\\\Calendar\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Calendar.css\"; //Fullcalendar and Realted Plugins\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from '@fullcalendar/list'; //For List View\n\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"; //moment\n\nimport momentPlugin from \"@fullcalendar/moment\"; // ES6 Modules \n\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport Entry from \"./Entry\";\nimport Data from \"./Data\";\n\nfunction eventResize(event, delta, revertFunc) {\n  var endDate = event.end.format().toString();\n  var startDate = event.start.format().toString();\n}\n\nfunction createEvent(eventAdd) {\n  return /*#__PURE__*/React.createElement(Entry, {\n    key: eventAdd.id,\n    title: eventAdd.title,\n    date: eventAdd.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction Calendar(props) {\n  _s();\n\n  const [event, setEvent] = useState(undefined);\n  const scopes = 'https://www.googleapis.com/auth/calendar';\n  const key = \"AIzaSyCQu3FwUp9ynWQ20WieHE9pSSh5StTdTlk\";\n  const id = \"danasobh46@gmail.com\";\n  const url = \"https://www.googleapis.com/calendar/v3/calendars/\" + id + \"/events?key=\" + key;\n  useEffect(() => {\n    axios.get(url).then(res => {\n      const responseUser = res.data;\n      setEvent(responseUser);\n    });\n  }, []);\n\n  function handleAuthResult(authResult) {\n    if (authResult && !authResult.error) {\n      loadCalendarApi();\n    } else {\n      handleAuthClick();\n    }\n  } //request credentials\n\n\n  function handleAuthClick() {\n    gapi.auth.authorize({\n      calendar_id: id,\n      scope: scopes,\n      immediate: false\n    }, handleAuthResult);\n    return false;\n  }\n\n  function loadCalendarApi() {\n    gapi.client.load('calendar', 'v3', makeApiCall);\n  }\n\n  function makeApiCall() {\n    requestList = gapi.client.calendar.events.list({\n      'calendarId': calendarId\n    });\n    console.log('--- eventsList ---');\n    console.log(eventsList); //uiCalendarConfig.calendars['myCalendar'].fullCalendar('removeEventSource', eventsList);\n\n    $(\"#calendar\").fullCalendar('removeEventSource', eventsList);\n    eventsList = []; // Step 6: Execute the API request\n\n    requestList.then(function (resp) {\n      if (resp.result.error) {\n        reportError('Google Calendar API: ' + data.error.message, data.error.errors);\n      } else if (resp.result.items) {\n        resp.result.items.forEach(function (entry, index) {\n          eventsList.push({\n            id: entry.id,\n            title: entry.summary,\n            start: entry.start.dateTime || entry.start.date,\n            // try timed. will fall back to all-day\n            end: entry.end.dateTime || entry.end.date,\n            // same\n            //url: url,\n            location: entry.location,\n            description: entry.description\n          });\n        });\n      }\n    }, function (reason) {\n      console.log('Error: ' + reason.result.error.message);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"maincontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin, listPlugin, googleCalendarPlugin],\n    timeFormat: \"dddd, MMMM Do YYYY, h:mm:ss a\",\n    initialView: \"dayGridMonth\",\n    editable: \"true\",\n    droppable: \"true\",\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek' //center: 'addEventButton'\n\n    }\n    /*eventClick={\r\n      function(arg){\r\n        alert(\"Hello \"+ arg.event.title)\r\n        alert(arg.event.start)\r\n      }\r\n    }*/\n    ,\n    eventClick: function (arg) {\n      eventResize = eventResize;\n      Swal.fire({\n        title: 'Event',\n        showDenyButton: true,\n        showCancelButton: true,\n        confirmButtonText: 'Edit Event',\n        denyButtonText: 'Delete Event',\n        cancelButtonText: 'Cancel',\n        initialDate: '2021-02-12',\n        businessHours: true,\n        // display business hours\n        editable: true,\n        selectable: true,\n        selectHelper: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          Swal.fire({\n            title: 'Enter your new event',\n            input: 'text',\n            inputPlaceholder: 'Enter your new event',\n            showCancelButton: true\n          });\n        } else if (result.dismiss === Swal.DismissReason.deny) {\n          Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n        }\n      });\n    } // events={[\n\n    /* { title: 'event 1', date: '2021-02-13' ,},\r\n     { title: 'event 2', date: '2021-02-15' },\r\n     { title: 'event 2',  start: '2021-02-03T13:00:00' , constraint: 'businessHours'},\r\n     { title: 'event 2', date: '2021-02-15' },\r\n     { title: 'event 2', date: '2021-02-15' },\r\n     { title: 'event 2', date: '2021-02-15' },\r\n     { title: 'event 2', date: '2021-02-15' },\r\n      \r\n     {\r\n     start: '2021-02-10',\r\n     end: '2021-02-12',\r\n     overlap: false,\r\n     display: 'background',\r\n     color: '#ff9f89'\r\n    },\r\n    {\r\n     title: 'Meeting',\r\n     start: '2021-02-13T11:00:00',\r\n     constraint: 'availableForMeeting', // defined below\r\n     color: '#257e4a'\r\n    },\r\n    {\r\n     groupId: 'availableForMeeting',\r\n     start: '2021-02-13T10:00:00',\r\n     end: '2021-02-13T16:00:00',\r\n     display: 'background'\r\n    },\r\n    ]}*/\n    //<h1>{Data.map(createEvent)}</h1>  \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }), event && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 16\n    }\n  }, \"Hello, \", event.items[0].summary + \" \" + event.items[1].summary));\n}\n\n_s(Calendar, \"qwp3n+B4R6T6sIbd0hk2L3Bh8U4=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ccss/Desktop/widget-template-dev/widgets-template-dev/client/src/Components/Calendar/Calendar.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","listPlugin","googleCalendarPlugin","momentPlugin","Swal","axios","Entry","Data","eventResize","event","delta","revertFunc","endDate","end","format","toString","startDate","start","createEvent","eventAdd","id","title","date","Calendar","props","setEvent","undefined","scopes","key","url","get","then","res","responseUser","data","handleAuthResult","authResult","error","loadCalendarApi","handleAuthClick","gapi","auth","authorize","calendar_id","scope","immediate","client","load","makeApiCall","requestList","calendar","events","list","calendarId","console","log","eventsList","$","fullCalendar","resp","result","reportError","message","errors","items","forEach","entry","index","push","summary","dateTime","location","description","reason","left","center","right","arg","fire","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","initialDate","businessHours","editable","selectable","selectHelper","isConfirmed","input","inputPlaceholder","dismiss","DismissReason","deny"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport \"./Calendar.css\";\r\n\r\n//Fullcalendar and Realted Plugins\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; \r\nimport listPlugin from '@fullcalendar/list'; //For List View\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\r\n//moment\r\n\r\nimport momentPlugin from \"@fullcalendar/moment\";\r\n// ES6 Modules \r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport Entry from \"./Entry\";\r\nimport Data from \"./Data\";\r\n\r\nfunction eventResize(event, delta, revertFunc) {\r\n  var endDate = event.end.format().toString();\r\n  var startDate = event.start.format().toString();\r\n}\r\nfunction createEvent(eventAdd) {\r\n  return (\r\n    <Entry\r\n      key={eventAdd.id}\r\n      title={eventAdd.title}\r\n      date={eventAdd.date}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Calendar(props) {\r\n  const [event,setEvent]= useState(undefined);\r\n  const scopes = 'https://www.googleapis.com/auth/calendar';\r\n  const key = \"AIzaSyCQu3FwUp9ynWQ20WieHE9pSSh5StTdTlk\";\r\n  const id = \"danasobh46@gmail.com\";\r\n  const url =\"https://www.googleapis.com/calendar/v3/calendars/\"+id+\"/events?key=\"+key;\r\n  useEffect(()=>{\r\n    axios.get(url).then((res)=>{\r\n          const responseUser = res.data;\r\n          setEvent(responseUser);\r\n    });\r\n}, []);\r\nfunction handleAuthResult(authResult) {\r\n\r\n  if (authResult && !authResult.error) {\r\n     loadCalendarApi();\r\n  } else {\r\n     handleAuthClick();\r\n  }\r\n}\r\n\r\n//request credentials\r\nfunction handleAuthClick() {\r\n  gapi.auth.authorize(\r\n     {\r\n        calendar_id: id,\r\n        scope: scopes,\r\n        immediate: false\r\n     }, handleAuthResult);\r\n  return false;\r\n}\r\nfunction loadCalendarApi() {\r\n\r\n  gapi.client.load('calendar', 'v3', makeApiCall);\r\n\r\n}\r\nfunction makeApiCall() {\r\n\r\n  requestList = gapi.client.calendar.events.list({\r\n     'calendarId': calendarId\r\n  });\r\n\r\n  console.log('--- eventsList ---');\r\n  console.log(eventsList);\r\n  //uiCalendarConfig.calendars['myCalendar'].fullCalendar('removeEventSource', eventsList);\r\n  $(\"#calendar\").fullCalendar('removeEventSource', eventsList);\r\n\r\n  eventsList = [];\r\n\r\n  // Step 6: Execute the API request\r\n  requestList\r\n     .then(function (resp) {\r\n\r\n        if (resp.result.error) {\r\n\r\n           reportError('Google Calendar API: ' + data.error.message, data.error.errors);\r\n\r\n        } else if (resp.result.items) {\r\n\r\n           resp.result.items.forEach(function (entry, index) {\r\n              eventsList.push({\r\n                 id: entry.id,\r\n                 title: entry.summary,\r\n                 start: entry.start.dateTime || entry.start.date, // try timed. will fall back to all-day\r\n                 end: entry.end.dateTime || entry.end.date, // same\r\n                 //url: url,\r\n                 location: entry.location,\r\n                 description: entry.description\r\n              });\r\n           });\r\n\r\n        }\r\n      }, function (reason) {\r\n        console.log('Error: ' + reason.result.error.message);\r\n     });\r\n      }\r\n  \r\n  return (\r\n<div className=\"maincontainer\">\r\n    <FullCalendar\r\n      plugins={[dayGridPlugin, interactionPlugin, listPlugin,googleCalendarPlugin  ]}\r\n      timeFormat= \"dddd, MMMM Do YYYY, h:mm:ss a\"\r\n      initialView=\"dayGridMonth\"\r\n      editable= \"true\"\r\n      droppable= \"true\"\r\n      headerToolbar={{\r\n        left: 'prev,next today',\r\n        center: 'title',\r\n        right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek',\r\n        //center: 'addEventButton'\r\n      }}\r\n      /*eventClick={\r\n        function(arg){\r\n          alert(\"Hello \"+ arg.event.title)\r\n          alert(arg.event.start)\r\n        }\r\n      }*/\r\n      eventClick={function(arg) {\r\n        eventResize= eventResize\r\n          Swal.fire({\r\n               title: 'Event',\r\n               showDenyButton: true,\r\n               showCancelButton: true,\r\n               confirmButtonText: 'Edit Event',\r\n               denyButtonText: 'Delete Event',\r\n               cancelButtonText: 'Cancel',\r\n               initialDate: '2021-02-12',\r\n                businessHours: true, // display business hours\r\n                editable: true,\r\n                selectable: true,\r\n                 selectHelper: true,\r\n   \r\n          }).then((result) => {\r\n                  \r\n            if (result.isConfirmed) {\r\n              Swal.fire({\r\n              title: 'Enter your new event',\r\n               input: 'text',\r\n               inputPlaceholder: 'Enter your new event',\r\n               showCancelButton: true,\r\n            })\r\n            } else if (result.dismiss === Swal.DismissReason.deny) {\r\n                    Swal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                  )\r\n                }\r\n          })\r\n      }}\r\n     // events={[\r\n       /* { title: 'event 1', date: '2021-02-13' ,},\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2',  start: '2021-02-03T13:00:00' , constraint: 'businessHours'},\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n         \r\n        {\r\n        start: '2021-02-10',\r\n        end: '2021-02-12',\r\n        overlap: false,\r\n        display: 'background',\r\n        color: '#ff9f89'\r\n      },\r\n      {\r\n        title: 'Meeting',\r\n        start: '2021-02-13T11:00:00',\r\n        constraint: 'availableForMeeting', // defined below\r\n        color: '#257e4a'\r\n      },\r\n      {\r\n        groupId: 'availableForMeeting',\r\n        start: '2021-02-13T10:00:00',\r\n        end: '2021-02-13T16:00:00',\r\n        display: 'background'\r\n      },\r\n      ]}*/ \r\n      //<h1>{Data.map(createEvent)}</h1>  \r\n      \r\n    />\r\n      \r\n     {event && <h1>Hello, {event.items[0].summary+\" \" +event.items[1].summary}</h1>}\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}