{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ccss\\\\Desktop\\\\widget-template-dev\\\\widgets-template-dev\\\\client\\\\src\\\\Components\\\\Calendar\\\\Calendar.js\";\nimport React from \"react\";\nimport \"./Calendar.css\"; //Fullcalendar and Realted Plugins\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from '@fullcalendar/list'; //For List View\n\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"; //moment\n\nimport momentPlugin from \"@fullcalendar/moment\"; // ES6 Modules \n\nimport Swal from \"sweetalert2\";\n\nfunction eventResize(event, delta, revertFunc) {\n  var endDate = event.end.format().toString();\n  var startDate = event.start.format().toString();\n}\n\nfunction Calendar() {\n  var gapi = window.gapi;\n  /* \r\n    Update with your own Client Id and Api key \r\n  */\n\n  var CLIENT_ID = \"67351184139-0kfh5j3gqjpek24n74sl2ijshtc6bn2b.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyA1ZzA1NUeH3rjESdjctrs_plU4ukeAMW4\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client');\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'Lebanon'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': ['RRULE:FREQ=DAILY;COUNT=2'],\n          'attendees': [{\n            'email': 'danasobh46@example.com'\n          }, {\n            'email': 'farahsobh02@example.com'\n          }],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [{\n              'method': 'email',\n              'minutes': 24 * 60\n            }, {\n              'method': 'popup',\n              'minutes': 10\n            }]\n          }\n        };\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event\n        });\n        request.execute(event => {\n          console.log(event);\n          window.open(event.htmlLink);\n        }); // get events\n\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': new Date().toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items;\n          console.log('EVENTS: ', events);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"maincontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin, listPlugin, googleCalendarPlugin],\n    timeFormat: \"dddd, MMMM Do YYYY, h:mm:ss a\" // googleCalendarApiKey= \"AIzaSyDMpvb669_dE4H2qL67vskChuWNzSSLBAg\"\n    ,\n    initialView: \"dayGridMonth\",\n    editable: \"true\",\n    droppable: \"true\",\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek' //center: 'addEventButton'\n\n    }\n    /*eventClick={\r\n      function(arg){\r\n        alert(\"Hello \"+ arg.event.title)\r\n        alert(arg.event.start)\r\n      }\r\n    }*/\n    ,\n    eventClick: function (arg) {\n      eventResize = eventResize;\n      Swal.fire({\n        title: 'Event',\n        displayEventTime: false,\n        showDenyButton: true,\n        showCancelButton: true,\n        confirmButtonText: 'Edit Event',\n        denyButtonText: 'Delete Event',\n        cancelButtonText: 'Cancel'\n      }).then(result => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          Swal.fire({\n            title: 'Enter your new event',\n            input: 'text',\n            inputPlaceholder: 'Enter your new event',\n            showCancelButton: true\n          });\n        } else if (result.dismiss === Swal.DismissReason.deny) {\n          Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n        }\n      });\n    } //initialView=\"dayGridMonth\"\n    ,\n    events: [{\n      title: 'event 1',\n      date: '2021-02-13'\n    }\n    /*{ title: 'event 2', date: '2021-02-15' },\r\n    { title: 'event 2', date: '2021-01-15' },\r\n    { title: 'event 2', date: '2021-02-15' },\r\n    { title: 'event 2', date: '2021-02-15' },\r\n    { title: 'event 2', date: '2021-02-15' },\r\n    { title: 'event 2', date: '2021-02-15' },*/\n    //{ googleCalendarId: \"en.lb#holiday@group.v.calendar.google.com\"}\n    ],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: 100,\n      height: 50\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  }, \"Add Event\"));\n}\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ccss/Desktop/widget-template-dev/widgets-template-dev/client/src/Components/Calendar/Calendar.js"],"names":["React","FullCalendar","dayGridPlugin","interactionPlugin","listPlugin","googleCalendarPlugin","momentPlugin","Swal","eventResize","event","delta","revertFunc","endDate","end","format","toString","startDate","start","Calendar","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClick","load","console","log","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","request","calendar","events","insert","execute","open","htmlLink","list","Date","toISOString","response","result","items","left","center","right","arg","fire","title","displayEventTime","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","isConfirmed","input","inputPlaceholder","dismiss","DismissReason","deny","date","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CAA6C;;AAC7C,OAAOC,oBAAP,MAAiC,+BAAjC,C,CACA;;AAEA,OAAOC,YAAP,MAAyB,sBAAzB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+C;AAC7C,MAAIC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUC,MAAV,GAAmBC,QAAnB,EAAd;AACA,MAAIC,SAAS,GAAGP,KAAK,CAACQ,KAAN,CAAYH,MAAZ,GAAqBC,QAArB,EAAhB;AACD;;AAED,SAASG,QAAT,GAAoB;AAClB,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAlB;AACA;AACF;AACA;;AACE,MAAIE,SAAS,GAAG,yEAAhB;AACA,MAAIC,OAAO,GAAG,yCAAd;AACA,MAAIC,cAAc,GAAG,CAAC,+DAAD,CAArB;AACA,MAAIC,MAAM,GAAG,iDAAb;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,IAAI,CAACO,IAAL,CAAU,cAAV,EAA0B,MAAM;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAT,MAAAA,IAAI,CAACU,MAAL,CAAYC,IAAZ,CAAiB;AACfC,QAAAA,MAAM,EAAET,OADO;AAEfU,QAAAA,QAAQ,EAAEX,SAFK;AAGfY,QAAAA,aAAa,EAAEV,cAHA;AAIfW,QAAAA,KAAK,EAAEV;AAJQ,OAAjB;AAOAL,MAAAA,IAAI,CAACU,MAAL,CAAYH,IAAZ,CAAiB,UAAjB,EAA6B,IAA7B,EAAmC,MAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAzC;AAEAT,MAAAA,IAAI,CAACgB,KAAL,CAAWC,eAAX,GAA6BC,MAA7B,GACCC,IADD,CACM,MAAM;AAEV,YAAI7B,KAAK,GAAG;AACV,qBAAW,gBADD;AAEV,sBAAY,yCAFF;AAGV,yBAAe,2BAHL;AAIV,mBAAS;AACP,wBAAY,2BADL;AAEP,wBAAY;AAFL,WAJC;AAQV,iBAAO;AACL,wBAAY,2BADP;AAEL,wBAAY;AAFP,WARG;AAYV,wBAAc,CACZ,0BADY,CAZJ;AAeV,uBAAa,CACX;AAAC,qBAAS;AAAV,WADW,EAEX;AAAC,qBAAS;AAAV,WAFW,CAfH;AAmBV,uBAAa;AACX,0BAAc,KADH;AAEX,yBAAa,CACX;AAAC,wBAAU,OAAX;AAAoB,yBAAW,KAAK;AAApC,aADW,EAEX;AAAC,wBAAU,OAAX;AAAoB,yBAAW;AAA/B,aAFW;AAFF;AAnBH,SAAZ;AA4BA,YAAI8B,OAAO,GAAGpB,IAAI,CAACU,MAAL,CAAYW,QAAZ,CAAqBC,MAArB,CAA4BC,MAA5B,CAAmC;AAC/C,wBAAc,SADiC;AAE/C,sBAAYjC;AAFmC,SAAnC,CAAd;AAKA8B,QAAAA,OAAO,CAACI,OAAR,CAAgBlC,KAAK,IAAI;AACvBkB,UAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACAW,UAAAA,MAAM,CAACwB,IAAP,CAAYnC,KAAK,CAACoC,QAAlB;AACD,SAHD,EAnCU,CAyCV;;AACA1B,QAAAA,IAAI,CAACU,MAAL,CAAYW,QAAZ,CAAqBC,MAArB,CAA4BK,IAA5B,CAAiC;AAC/B,wBAAc,SADiB;AAE/B,qBAAY,IAAIC,IAAJ,EAAD,CAAaC,WAAb,EAFoB;AAG/B,yBAAe,KAHgB;AAI/B,0BAAgB,IAJe;AAK/B,wBAAc,EALiB;AAM/B,qBAAW;AANoB,SAAjC,EAOGV,IAPH,CAOQW,QAAQ,IAAI;AAClB,gBAAMR,MAAM,GAAGQ,QAAQ,CAACC,MAAT,CAAgBC,KAA/B;AACAxB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,MAAxB;AACD,SAVD;AAcD,OAzDD;AA0DD,KAtED;AAuED,GAxED;;AA0EA,sBACF;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,CAACvC,aAAD,EAAgBC,iBAAhB,EAAmCC,UAAnC,EAA8CC,oBAA9C,CADX;AAEE,IAAA,UAAU,EAAE,+BAFd,CAGC;AAHD;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,QAAQ,EAAE,MALZ;AAME,IAAA,SAAS,EAAE,MANb;AAOE,IAAA,aAAa,EAAE;AACb+C,MAAAA,IAAI,EAAE,iBADO;AAEbC,MAAAA,MAAM,EAAE,OAFK;AAGbC,MAAAA,KAAK,EAAE,8CAHM,CAIb;;AAJa;AAOf;AACN;AACA;AACA;AACA;AACA;AAnBI;AAoBE,IAAA,UAAU,EAAE,UAASC,GAAT,EAAc;AACxB/C,MAAAA,WAAW,GAAEA,WAAb;AACED,MAAAA,IAAI,CAACiD,IAAL,CAAU;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,gBAAgB,EAAE,KAFb;AAGLC,QAAAA,cAAc,EAAE,IAHX;AAILC,QAAAA,gBAAgB,EAAE,IAJb;AAKLC,QAAAA,iBAAiB,EAAE,YALd;AAMLC,QAAAA,cAAc,EAAE,cANX;AAOLC,QAAAA,gBAAgB,EAAE;AAPb,OAAV,EAQGzB,IARH,CAQSY,MAAD,IAAY;AACZ;AACN,YAAIA,MAAM,CAACc,WAAX,EAAwB;AACtBzD,UAAAA,IAAI,CAACiD,IAAL,CAAU;AACVC,YAAAA,KAAK,EAAE,sBADG;AAETQ,YAAAA,KAAK,EAAE,MAFE;AAGTC,YAAAA,gBAAgB,EAAE,sBAHT;AAITN,YAAAA,gBAAgB,EAAE;AAJT,WAAV;AAMD,SAPD,MAOO,IAAIV,MAAM,CAACiB,OAAP,KAAmB5D,IAAI,CAAC6D,aAAL,CAAmBC,IAA1C,EAAgD;AAC/C9D,UAAAA,IAAI,CAACiD,IAAL,CACA,UADA,EAEA,6BAFA,EAGA,SAHA;AAKH;AACN,OAxBD;AAyBH,KA/CH,CAgDI;AAhDJ;AAkDE,IAAA,MAAM,EAAE,CACN;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBa,MAAAA,IAAI,EAAE;AAA1B;AACA;AACR;AACA;AACA;AACA;AACA;AACQ;AARM,KAlDV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eA8DK;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAAf;AAAyC,IAAA,OAAO,EAAE/C,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA9DL,CADE;AAkED;;KAtJQP,Q;AAwJT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Calendar.css\";\r\n\r\n//Fullcalendar and Realted Plugins\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; \r\nimport listPlugin from '@fullcalendar/list'; //For List View\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\r\n//moment\r\n\r\nimport momentPlugin from \"@fullcalendar/moment\";\r\n// ES6 Modules \r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction eventResize(event, delta, revertFunc) {\r\n  var endDate = event.end.format().toString();\r\n  var startDate = event.start.format().toString();\r\n}\r\n\r\nfunction Calendar() {\r\n  var gapi = window.gapi\r\n  /* \r\n    Update with your own Client Id and Api key \r\n  */\r\n  var CLIENT_ID = \"67351184139-0kfh5j3gqjpek24n74sl2ijshtc6bn2b.apps.googleusercontent.com\"\r\n  var API_KEY = \"AIzaSyA1ZzA1NUeH3rjESdjctrs_plU4ukeAMW4\"\r\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const handleClick = () => {\r\n    gapi.load('client:auth2', () => {\r\n      console.log('loaded client')\r\n\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n\r\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => {\r\n        \r\n        var event = {\r\n          'summary': 'Awesome Event!',\r\n          'location': '800 Howard St., San Francisco, CA 94103',\r\n          'description': 'Really great refreshments',\r\n          'start': {\r\n            'dateTime': '2020-06-28T09:00:00-07:00',\r\n            'timeZone': 'Lebanon'\r\n          },\r\n          'end': {\r\n            'dateTime': '2020-06-28T17:00:00-07:00',\r\n            'timeZone': 'America/Los_Angeles'\r\n          },\r\n          'recurrence': [\r\n            'RRULE:FREQ=DAILY;COUNT=2'\r\n          ],\r\n          'attendees': [\r\n            {'email': 'danasobh46@example.com'},\r\n            {'email': 'farahsobh02@example.com'}\r\n          ],\r\n          'reminders': {\r\n            'useDefault': false,\r\n            'overrides': [\r\n              {'method': 'email', 'minutes': 24 * 60},\r\n              {'method': 'popup', 'minutes': 10}\r\n            ]\r\n          }\r\n        }\r\n\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n        \r\n        \r\n        // get events\r\n        gapi.client.calendar.events.list({\r\n          'calendarId': 'primary',\r\n          'timeMin': (new Date()).toISOString(),\r\n          'showDeleted': false,\r\n          'singleEvents': true,\r\n          'maxResults': 10,\r\n          'orderBy': 'startTime'\r\n        }).then(response => {\r\n          const events = response.result.items\r\n          console.log('EVENTS: ', events)\r\n        })\r\n        \r\n    \r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n<div className=\"maincontainer\">\r\n    <FullCalendar\r\n      plugins={[dayGridPlugin, interactionPlugin, listPlugin,googleCalendarPlugin  ]}\r\n      timeFormat= \"dddd, MMMM Do YYYY, h:mm:ss a\"\r\n     // googleCalendarApiKey= \"AIzaSyDMpvb669_dE4H2qL67vskChuWNzSSLBAg\"\r\n      initialView=\"dayGridMonth\"\r\n      editable= \"true\"\r\n      droppable= \"true\"\r\n      headerToolbar={{\r\n        left: 'prev,next today',\r\n        center: 'title',\r\n        right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek',\r\n        //center: 'addEventButton'\r\n      }}\r\n\r\n      /*eventClick={\r\n        function(arg){\r\n          alert(\"Hello \"+ arg.event.title)\r\n          alert(arg.event.start)\r\n        }\r\n      }*/\r\n      eventClick={function(arg) {\r\n        eventResize= eventResize\r\n          Swal.fire({\r\n               title: 'Event',\r\n               displayEventTime: false,\r\n               showDenyButton: true,\r\n               showCancelButton: true,\r\n               confirmButtonText: 'Edit Event',\r\n               denyButtonText: 'Delete Event',\r\n               cancelButtonText: 'Cancel',\r\n          }).then((result) => {\r\n                  /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n              Swal.fire({\r\n              title: 'Enter your new event',\r\n               input: 'text',\r\n               inputPlaceholder: 'Enter your new event',\r\n               showCancelButton: true,\r\n            })\r\n            } else if (result.dismiss === Swal.DismissReason.deny) {\r\n                    Swal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                  )\r\n                }\r\n          })\r\n      }}\r\n        //initialView=\"dayGridMonth\"\r\n\r\n      events={[\r\n        { title: 'event 1', date: '2021-02-13'},\r\n        /*{ title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-01-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },*/\r\n        //{ googleCalendarId: \"en.lb#holiday@group.v.calendar.google.com\"}\r\n      ]}\r\n    />\r\n     <button style={{width: 100, height: 50}} onClick={handleClick}>Add Event</button>\r\n</div>\r\n);\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}