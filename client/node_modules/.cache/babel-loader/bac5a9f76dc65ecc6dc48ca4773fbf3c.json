{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ccss\\\\Desktop\\\\widget-template-dev\\\\widgets-template-dev\\\\client\\\\src\\\\Components\\\\Calendar\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Calendar.css\"; //Fullcalendar and Realted Plugins\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from '@fullcalendar/list'; //For List View\n\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"; // ES6 Modules \n\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\"; //import Entry from \"./Entry\";\n//import Data from \"./Data\";\n\nfunction eventResize(event, delta, revertFunc) {\n  var endDate = event.end.format().toString();\n  var startDate = event.start.format().toString();\n} //mapping events from Entry\n\n/*function createEvent(eventAdd) {\r\n  return(\r\n    <Entry\r\n      key={eventAdd.id}\r\n      title={eventAdd.title}\r\n      date={eventAdd.date}\r\n    />\r\n  );\r\n}*/\n\n\nfunction Calendar(props) {\n  _s();\n\n  var Title = [];\n  var Time = [];\n  const [event, setEvent] = useState(); ///  scopes = 'https://www.googleapis.com/auth/calendar';\n\n  const key = \"AIzaSyCQu3FwUp9ynWQ20WieHE9pSSh5StTdTlk\";\n  const id = \"danasobh46@gmail.com\"; //https://www.googleapis.com/calendar/v3/calendars/${<YOUR_CALENDAR_ID>}/events?key=${<YOUR_API_KEY>}\n\n  const url = \"https://www.googleapis.com/calendar/v3/calendars/\" + id + \"/events?key=\" + key;\n  useEffect(() => {\n    axios.get(url).then(res => {\n      const responseUser = res.data;\n      setEvent(responseUser);\n    }).catch(erros => {\n      console.log(erros);\n    });\n  });\n  var Event = [];\n\n  for (let i = 0; i < 4; i++) {\n    Event.push({\n      Title: event && event.items[i].summary,\n      Time: event && event.items[i].start.date\n    });\n    var events = Event[i];\n    console.log(events);\n  }\n  /*  var myEvents = Event.map(event => ({\r\n     Title: event.Title,\r\n     Time: event.Time\r\n   }));\r\n   console.log(myEvents);*/\n\n  /*var myEvents = Event.map(event => ({\r\n  Title: event.Title,\r\n  Time: event.Time\r\n  }));*/\n  // const Title= event && event.items[0].summary \n  //const Time= event && event.items[0].start.date\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"maincontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin, listPlugin, googleCalendarPlugin],\n    timeFormat: \"dddd, MMMM Do YYYY, h:mm:ss a\",\n    initialView: \"dayGridMonth\",\n    editable: \"true\",\n    droppable: \"true\",\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek'\n    }\n    /*eventClick={\r\n      function(arg){\r\n        alert(\"Hello \"+ arg.event.title)\r\n        alert(arg.event.start)\r\n      }\r\n    }*/\n    ,\n    events: [{\n      title: 'event 1',\n      date: '2021-02-11'\n    }, {\n      title: 'event 2',\n      date: '2021-02-15'\n    }, {\n      title: 'event 2',\n      date: '2021-02-15'\n    }, {\n      start: '2021-02-10',\n      end: '2021-02-12',\n      overlap: false,\n      display: 'background',\n      color: '#ff9f89'\n    }, {\n      title: 'Meeting',\n      start: '2021-02-13T11:00:00',\n      constraint: 'availableForMeeting',\n      // defined below\n      color: '#257e4a'\n    }, {\n      groupId: 'availableForMeeting',\n      start: '2021-02-13T10:00:00',\n      end: '2021-02-13T16:00:00',\n      display: 'background'\n    }\n    /* { function(){\r\n        for (let i = 0; i < 4; i++) {\r\n          Event.push({\r\n          Title: event && event.items[i].summary,\r\n          Time: event && event.items[i].start.date,\r\n        })\r\n        return Events\r\n       }\r\n      }},*/\n    ]\n    /*eventRender={[ function(event, element, view) {\r\n           if (!event.description) return false;\r\n    }\r\n    ]}*/\n    ,\n    eventClick: function (arg) {\n      eventResize = eventResize;\n      Swal.fire({\n        title: 'Event',\n        showDenyButton: true,\n        showCancelButton: true,\n        confirmButtonText: 'Edit Event',\n        denyButtonText: 'Delete Event',\n        cancelButtonText: 'Cancel',\n        initialDate: '2021-02-12',\n        editable: true,\n        selectable: true,\n        selectHelper: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          Swal.fire({\n            title: 'Enter your new event',\n            input: 'text',\n            inputPlaceholder: 'Enter your new event',\n            showCancelButton: true\n          });\n        } else if (result.dismiss === Swal.DismissReason.deny) {\n          Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), event && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }\n  }, \"Hello, \", events + event.items[1].summary));\n}\n\n_s(Calendar, \"KmO5jsKaIQKwzZWKhkPQ/prQoBc=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ccss/Desktop/widget-template-dev/widgets-template-dev/client/src/Components/Calendar/Calendar.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","listPlugin","googleCalendarPlugin","Swal","axios","eventResize","event","delta","revertFunc","endDate","end","format","toString","startDate","start","Calendar","props","Title","Time","setEvent","key","id","url","get","then","res","responseUser","data","catch","erros","console","log","Event","i","push","items","summary","date","events","left","center","right","title","overlap","display","color","constraint","groupId","arg","fire","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","initialDate","editable","selectable","selectHelper","result","isConfirmed","input","inputPlaceholder","dismiss","DismissReason","deny"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport \"./Calendar.css\";\r\n\r\n//Fullcalendar and Realted Plugins\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; \r\nimport listPlugin from '@fullcalendar/list'; //For List View\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\r\n// ES6 Modules \r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n//import Entry from \"./Entry\";\r\n//import Data from \"./Data\";\r\nfunction eventResize(event, delta, revertFunc) {\r\n  var endDate = event.end.format().toString();\r\n  var startDate = event.start.format().toString();\r\n}\r\n//mapping events from Entry\r\n/*function createEvent(eventAdd) {\r\n  return(\r\n    <Entry\r\n      key={eventAdd.id}\r\n      title={eventAdd.title}\r\n      date={eventAdd.date}\r\n    />\r\n  );\r\n}*/\r\n\r\nfunction Calendar(props) {\r\n  var Title=[];\r\n  var Time=[];\r\n  const [event,setEvent]= useState();\r\n///  scopes = 'https://www.googleapis.com/auth/calendar';\r\n  const key = \"AIzaSyCQu3FwUp9ynWQ20WieHE9pSSh5StTdTlk\";\r\n  const id = \"danasobh46@gmail.com\";\r\n  //https://www.googleapis.com/calendar/v3/calendars/${<YOUR_CALENDAR_ID>}/events?key=${<YOUR_API_KEY>}\r\n  const url =\"https://www.googleapis.com/calendar/v3/calendars/\"+id+\"/events?key=\"+key;\r\n  useEffect(()=>{\r\n    axios.get(url).then((res)=>{\r\n          const responseUser = res.data;\r\n          setEvent(responseUser);\r\n        }).catch(erros => {\r\n          console.log(erros);\r\n        });\r\n      });\r\n          var Event =[];\r\n          for (let i = 0; i < 4; i++) {\r\n            Event.push({\r\n            Title: event && event.items[i].summary,\r\n            Time: event && event.items[i].start.date,\r\n          })\r\n          var events=Event[i]\r\n          console.log(events)\r\n         }\r\n       /*  var myEvents = Event.map(event => ({\r\n          Title: event.Title,\r\n          Time: event.Time\r\n        }));\r\n        console.log(myEvents);*/\r\n        \r\n      /*var myEvents = Event.map(event => ({\r\n      Title: event.Title,\r\n      Time: event.Time\r\n    }));*/\r\n      \r\n         // const Title= event && event.items[0].summary \r\n          //const Time= event && event.items[0].start.date\r\n  return (\r\n<div className=\"maincontainer\">\r\n    <FullCalendar\r\n      plugins={[dayGridPlugin, interactionPlugin, listPlugin,googleCalendarPlugin  ]}\r\n      timeFormat= \"dddd, MMMM Do YYYY, h:mm:ss a\"\r\n      initialView=\"dayGridMonth\"\r\n      editable= \"true\"\r\n      droppable= \"true\"\r\n      headerToolbar={{\r\n        left: 'prev,next today',\r\n        center: 'title',\r\n        right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek',\r\n      }}\r\n      /*eventClick={\r\n        function(arg){\r\n          alert(\"Hello \"+ arg.event.title)\r\n          alert(arg.event.start)\r\n        }\r\n      }*/\r\n      events={[\r\n        { title: 'event 1', date: '2021-02-11' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        { title: 'event 2', date: '2021-02-15' },\r\n        {\r\n        start: '2021-02-10',\r\n        end: '2021-02-12',\r\n        overlap: false,\r\n        display: 'background',\r\n        color: '#ff9f89'\r\n      },\r\n      {\r\n        title: 'Meeting',\r\n        start: '2021-02-13T11:00:00',\r\n        constraint: 'availableForMeeting', // defined below\r\n        color: '#257e4a'\r\n      },\r\n      {\r\n        groupId: 'availableForMeeting',\r\n        start: '2021-02-13T10:00:00',\r\n        end: '2021-02-13T16:00:00',\r\n        display: 'background'\r\n      },\r\n      /* { function(){\r\n          for (let i = 0; i < 4; i++) {\r\n            Event.push({\r\n            Title: event && event.items[i].summary,\r\n            Time: event && event.items[i].start.date,\r\n          })\r\n          return Events\r\n         }\r\n        }},*/\r\n      ]}\r\n      /*eventRender={[ function(event, element, view) {\r\n             if (!event.description) return false;\r\n      }\r\n      ]}*/\r\n      eventClick={function(arg) {\r\n        eventResize= eventResize\r\n          Swal.fire({\r\n               title: 'Event',\r\n               showDenyButton: true,\r\n               showCancelButton: true,\r\n               confirmButtonText: 'Edit Event',\r\n               denyButtonText: 'Delete Event',\r\n               cancelButtonText: 'Cancel',\r\n               initialDate: '2021-02-12',\r\n                editable: true,\r\n                selectable: true,\r\n                 selectHelper: true,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              Swal.fire({\r\n              title: 'Enter your new event',\r\n               input: 'text',\r\n               inputPlaceholder: 'Enter your new event',\r\n               showCancelButton: true,\r\n            })\r\n            } else if (result.dismiss === Swal.DismissReason.deny) {\r\n                    Swal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                  )\r\n                 }\r\n          })\r\n      }}\r\n    />\r\n     {event && <h1>Hello, {events+ event.items[1].summary}</h1>}\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}